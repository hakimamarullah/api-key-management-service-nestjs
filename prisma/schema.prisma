// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum ApiKeyStatus {
  ACTIVE
  INACTIVE
  REPLACED
  EXPIRED
}

model ApiKey {
  id        Int          @id @default(autoincrement())
  apiKey    String       @map("api_key") @db.VarChar(500)
  tier      ApiKeyTier?  @relation(fields: [tierId], references: [id], onDelete: SetNull)
  tierId    Int?         @map("tier_id")
  owner     String       @map("owner") @db.VarChar(50)
  status    ApiKeyStatus @default(INACTIVE)
  refId     String?      @map("ref_id")
  expiredAt DateTime?    @map("expired_at") @db.Date()
  createdAt DateTime     @default(now()) @map("created_at")
  updatedAt DateTime     @updatedAt @map("updated_at")

  @@unique([apiKey, tierId])
  @@index([apiKey])
  @@map("api_key")
}

model ApiKeyTier {
  id          Int      @id @default(autoincrement())
  name        String   @unique
  limit       Int      @default(0)
  ttl         Int      @default(0)
  description String?  @db.VarChar(500)
  price       Float?   @default(0.0)
  apiKeys     ApiKey[]
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt @map("updated_at")

  @@map("api_key_tier")
}
